/** Autogenerated Main.cpp. */

#include <JuceHeader.h>
#include "includes.h"

// ==================================| Project Factory |==================================

namespace project
{

struct Factory: public scriptnode::dll::StaticLibraryHostFactory
{
	Factory()
	{
		TempoSyncer::initTempoData();
		// Node registrations -----------------------------------------------------------
		
		registerPolyNode<project::loopenv<1>, wrap::illegal_poly<project::loopenv<1>>>();
		registerPolyNode<project::seq<1>, wrap::illegal_poly<project::seq<1>>>();
		registerDataNode<project::balancefx_networkdata>();
		registerDataNode<project::f1_networkdata>();
		registerDataNode<project::follow_networkdata>();
		registerDataNode<project::follow_networkdata>();
		registerDataNode<project::gran1_networkdata>();
		registerDataNode<project::gran2_networkdata>();
		registerDataNode<project::gran3_networkdata>();
		registerDataNode<project::loopar1_networkdata>();
		registerDataNode<project::loopar2_networkdata>();
		registerDataNode<project::seq1_networkdata>();
		registerDataNode<project::seq2_networkdata>();
	}
};
}

scriptnode::dll::FactoryBase* hise::FrontendHostFactory::createStaticFactory()
{
	return new project::Factory();
}

